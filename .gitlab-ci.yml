# このパイプラインは手動実行とcronスケジュールで autoCreateAndDraftNote.js を自動実行します
# cronスケジュールは JST 11:45, 17:45, 23:45（UTC換算で2:45, 8:45, 14:45）
# GitLabでは1つのスケジュールに1つのCron式のみ設定可能
# 複数時刻で実行する場合は、以下のような1日3回のCron式も使用可能：
# 45 2,8,14 * * * (JST 11:45, 17:45, 23:45に相当)

stages:
  - create-and-draft
  - publish-notes
  - other-tasks

variables:
  NODE_VERSION: "20"

# 定期実行用ジョブ
auto-create-and-draft-note:
  stage: create-and-draft
  image: node:${NODE_VERSION}-bullseye
  
  # キャッシュ設定（npm installを高速化）
  cache:
    paths:
      - node_modules/
  
  # 実行条件：スケジュール実行（CREATE_DRAFT）または手動実行のみ
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE_TYPE == "CREATE_DRAFT"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "api"
  
  before_script:
    - apt-get update
    - apt-get install -y wget gnupg ca-certificates
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    - sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
    - apt-get update
    - apt-get install -y google-chrome-stable \
        libnss3 libxss1 libasound2 libatk-bridge2.0-0 libgtk-3-0 libx11-xcb1 \
        fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf
    - rm -rf /var/lib/apt/lists/*
    
  script:
    # 1. 依存パッケージのインストール
    - echo "依存パッケージをインストール中..."
    - npm ci
    
    # 2. 環境変数の設定（GitLabのCI/CD変数から取得）
    - echo "環境変数を設定中..."
    - export OPENROUTER_API_KEY="${OPENROUTER_API_KEY}"
    - export NOTE_EMAIL="${NOTE_EMAIL}"
    - export NOTE_PASSWORD="${NOTE_PASSWORD}"
    - export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    - export PUPPETEER_EXECUTABLE_PATH=/usr/bin/google-chrome-stable
    
    # 3. スクリプトの実行
    - echo "autoCreateAndDraftNote.js を実行中..."
    - node autoCreateAndDraftNote.js
    
  # エラー時のアーティファクト保存（ログなど）
  artifacts:
    when: on_failure
    paths:
      - "*.log"
    expire_in: 1 week
    
  # タイムアウト設定（10分）
  timeout: 10m

# 記事自動公開ジョブ（15時実行用）
auto-publish-notes:
  stage: publish-notes
  image: node:${NODE_VERSION}-bullseye
  
  cache:
    paths:
      - node_modules/
  
  # 実行条件：スケジュール実行（PUBLISH_NOTES）のみ
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE_TYPE == "PUBLISH_NOTES"
  
  before_script:
    - apt-get update
    - apt-get install -y wget gnupg ca-certificates
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    - sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
    - apt-get update
    - apt-get install -y google-chrome-stable \
        libnss3 libxss1 libasound2 libatk-bridge2.0-0 libgtk-3-0 libx11-xcb1 \
        fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf
    - rm -rf /var/lib/apt/lists/*
    
  script:
    - npm ci
    - export OPENROUTER_API_KEY="${OPENROUTER_API_KEY}"
    - export NOTE_EMAIL="${NOTE_EMAIL}"
    - export NOTE_PASSWORD="${NOTE_PASSWORD}"
    - export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    - export PUPPETEER_EXECUTABLE_PATH=/usr/bin/google-chrome-stable
    - echo "記事自動公開スクリプトを実行中..."
    - node autoPublishNotes.js
    
  artifacts:
    when: on_failure
    paths:
      - "*.log"
    expire_in: 1 week
    
  timeout: 10m

# その他のタスク用ジョブ
other-task:
  stage: other-tasks
  image: node:${NODE_VERSION}-bullseye
  
  cache:
    paths:
      - node_modules/
  
  # 実行条件：スケジュール実行（OTHER_TASK）のみ
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE_TYPE == "OTHER_TASK"
  
  script:
    - npm ci
    - echo "その他のタスクを実行中..."
    # ここに他のスクリプトを追加
    
  timeout: 5m

# ブラウザテスト専用ジョブ（手動実行）
test-browser-login:
  stage: create-and-draft
  image: node:${NODE_VERSION}-bullseye
  
  cache:
    paths:
      - node_modules/
  
  # 手動実行のみ
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: manual
      allow_failure: true
  
  before_script:
    - apt-get update
    - apt-get install -y wget gnupg ca-certificates
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    - sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
    - apt-get update
    - apt-get install -y google-chrome-stable \
        libnss3 libxss1 libasound2 libatk-bridge2.0-0 libgtk-3-0 libx11-xcb1 \
        fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf
    - rm -rf /var/lib/apt/lists/*
  
  script:
    - npm ci
    - export NOTE_EMAIL="${NOTE_EMAIL}"
    - export NOTE_PASSWORD="${NOTE_PASSWORD}"
    - export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    - export PUPPETEER_EXECUTABLE_PATH=/usr/bin/google-chrome-stable
    - echo "=== ブラウザ起動・ログインテスト開始 ==="
    - node testBrowserLogin.js
    
  artifacts:
    when: on_failure
    paths:
      - "*.log"
    expire_in: 1 week
    
  timeout: 5m

# 手動実行専用ジョブ（必要に応じて）
manual-create-and-draft-note:
  stage: create-and-draft
  image: node:${NODE_VERSION}-bullseye
  
  cache:
    paths:
      - node_modules/
  
  # 手動実行のみ
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: manual
      allow_failure: true
  
  before_script:
    - apt-get update
    - apt-get install -y wget gnupg ca-certificates
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    - sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
    - apt-get update
    - apt-get install -y google-chrome-stable \
        libnss3 libxss1 libasound2 libatk-bridge2.0-0 libgtk-3-0 libx11-xcb1 \
        fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf
    - rm -rf /var/lib/apt/lists/*
  
  script:
    - npm ci
    - export OPENROUTER_API_KEY="${OPENROUTER_API_KEY}"
    - export NOTE_EMAIL="${NOTE_EMAIL}"
    - export NOTE_PASSWORD="${NOTE_PASSWORD}"
    - export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    - export PUPPETEER_EXECUTABLE_PATH=/usr/bin/google-chrome-stable
    - node autoCreateAndDraftNote.js 
