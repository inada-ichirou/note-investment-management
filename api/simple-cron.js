// 最もシンプルなcronエンドポイント
export default async function handler(req, res) {
  // GETとPOSTリクエストを許可
  if (req.method !== 'GET' && req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    console.log('=== Simple Cron 実行開始 ===');
    console.log('Method:', req.method);
    
    // 環境変数チェック
    if (!process.env.OPENROUTER_API_KEY) {
      throw new Error('OPENROUTER_API_KEY is not set');
    }

    // シンプルなテスト用の記事内容を生成
    const testTitle = `Investment Update - ${new Date().toLocaleDateString('en-US')}`;
    const testContent = `This is a test article generated by the automated system. Generated at: ${new Date().toISOString()}`;

    const result = {
      success: true,
      message: 'Simple cron execution completed',
      timestamp: new Date().toISOString(),
      method: req.method,
      title: testTitle,
      content: testContent,
      environment: 'Vercel Functions (Simple)',
      status: 'ready_for_cron_job'
    };

    console.log('=== Simple Cron 実行完了 ===');
    res.status(200).json(result);

  } catch (error) {
    console.error('Simple Cron 実行エラー:', error);
    res.status(500).json({ 
      error: error.message,
      timestamp: new Date().toISOString(),
      method: req.method
    });
  }
} 
